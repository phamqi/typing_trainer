{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Typing.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { vocabulary } from \"../contans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Typing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.start = () => {\n      this.setState({\n        start: false\n      });\n      const timer = setInterval(() => {\n        if (this.state.counter == 0) {\n          clearInterval(timer);\n        } else {\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n        }\n      }, 1000);\n      this.setState({\n        timer: timer\n      });\n    };\n\n    this.setUp = () => {\n      let arrayWords = [];\n      let wordsAmount = 10;\n      let wordsLength = vocabulary.length;\n      let random, word;\n\n      for (var i = 0; i <= wordsAmount; i++) {\n        random = Math.floor(Math.random() * wordsLength);\n        word = vocabulary[random];\n        arrayWords.push(word);\n      }\n\n      clearInterval(this.state.timer);\n      this.setState({\n        arrayWords: arrayWords,\n        ready: true,\n        counter: 60,\n        start: true\n      });\n      let typing__render__char = document.getElementById(\"typing__render__char\");\n      let arrayChar = document.querySelectorAll(\"span.typing__char\");\n      const typing_input = document.getElementById(\"typing__input\");\n      typing__render__char.style.transform = \"translate(0px)\";\n      arrayChar.forEach(item => {\n        // item.classList.remove(\"correct\");\n        item.classList.remove(\"incorrect\", \"correct\"); // item.classList.remove('')\n      });\n      typing_input.focus();\n    };\n\n    this.typing = () => {\n      console.log(\"typing render\");\n      let count = 0;\n      let traslateValue = 0;\n      let stringInput = \"\";\n      let typing__render = document.getElementById(\"typing__render\");\n      let typing__render__char = document.getElementById(\"typing__render__char\");\n      let arrayChar = document.querySelectorAll(\"span.typing__char\");\n      const typing_input = document.getElementById(\"typing__input\");\n      let averageCharWidth = Math.floor(typing__render.clientWidth / 2 / arrayChar[0].clientWidth);\n      let arrayCharLength = arrayChar.length;\n      arrayChar[count].classList.add(\"text_active\");\n      typing_input.addEventListener(\"keydown\", e => {\n        if (this.state.start) {\n          this.start();\n        }\n\n        if (typing_input.value) {\n          if (e.key == \" \") {\n            let arrayValue = typing_input.value.toString().trim();\n            stringInput += typing_input.value.toString();\n\n            if (arrayValue == arrayChar[count].innerText) {\n              arrayChar[count].classList.add(\"correct\");\n            } else {\n              arrayChar[count].classList.add(\"incorrect\");\n            }\n\n            typing_input.value = \"\";\n            arrayChar[count].classList.remove(\"text_active\");\n\n            if (count >= averageCharWidth) {\n              traslateValue += arrayChar[count].clientWidth;\n              typing__render__char.style.transform = `translateX(-${traslateValue}px)`;\n            }\n\n            if (count > arrayCharLength - 1) {\n              typing_input.readOnly = true;\n            } else {\n              count++;\n\n              try {\n                arrayChar[count].classList.add(\"text_active\");\n              } catch (err) {}\n            }\n          }\n        }\n\n        if (count === arrayCharLength) {\n          typing_input.readOnly = true;\n          clearInterval(this.state.timer);\n        }\n      });\n\n      if (this.state.counter == 0) {\n        typing_input.readOnly = true;\n        clearInterval(this.state.timer);\n      }\n    };\n\n    this.state = {\n      arrayWords: [],\n      quoteEN: \"scale OOP java constructor \",\n      counter: 60,\n      start: true,\n      ready: false\n    };\n    console.log(\"app rerender\");\n  }\n\n  async componentDidMount() {\n    await this.setUp();\n\n    if (this.state.ready) {\n      this.typing();\n    }\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    let arrayWordsRender = this.state.arrayWords;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"typing__render\",\n        className: \"typing__render\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"typing__render__char\",\n          className: \"typing__render__char\",\n          style: {\n            \"--margin-char\": \"5px\",\n            \"--fontSize-char\": \"17px\"\n          },\n          children: Array.isArray(arrayWordsRender) && arrayWordsRender.length > 0 && arrayWordsRender.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing__char\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing__action\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"typing__input\",\n          className: \"typing__action__input\",\n          type: \"text\",\n          style: {\n            \"--fontSize-input\": \"17px\"\n          },\n          autocomplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing__action__counter\",\n          children: this.state.counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"typing__action__btn__restart\",\n          onClick: () => this.setUp(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"currentColor\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Typing;","map":{"version":3,"names":["React","Component","vocabulary","Typing","constructor","props","start","setState","timer","setInterval","state","counter","clearInterval","prevState","setUp","arrayWords","wordsAmount","wordsLength","length","random","word","i","Math","floor","push","ready","typing__render__char","document","getElementById","arrayChar","querySelectorAll","typing_input","style","transform","forEach","item","classList","remove","focus","typing","console","log","count","traslateValue","stringInput","typing__render","averageCharWidth","clientWidth","arrayCharLength","add","addEventListener","e","value","key","arrayValue","toString","trim","innerText","readOnly","err","quoteEN","componentDidMount","componentDidUpdate","render","arrayWordsRender","Array","isArray","map","index"],"sources":["C:/typing_trainer/src/component/Typing.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./styles.scss\";\r\nimport { vocabulary } from \"../contans\";\r\n\r\nclass Typing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrayWords: [],\r\n      quoteEN: \"scale OOP java constructor \",\r\n      counter: 60,\r\n      start: true,\r\n      ready: false,\r\n    };\r\n    console.log(\"app rerender\");\r\n  }\r\n  start = () => {\r\n    this.setState({\r\n      start: false,\r\n    });\r\n    const timer = setInterval(() => {\r\n      if (this.state.counter == 0) {\r\n        clearInterval(timer);\r\n      } else {\r\n        this.setState((prevState) => {\r\n          return { counter: prevState.counter - 1 };\r\n        });\r\n      }\r\n    }, 1000);\r\n    this.setState({\r\n      timer: timer,\r\n    });\r\n  };\r\n  setUp = () => {\r\n    let arrayWords = [];\r\n    let wordsAmount = 10;\r\n    let wordsLength = vocabulary.length;\r\n    let random, word;\r\n    for (var i = 0; i <= wordsAmount; i++) {\r\n      random = Math.floor(Math.random() * wordsLength);\r\n      word = vocabulary[random];\r\n      arrayWords.push(word);\r\n    }\r\n    clearInterval(this.state.timer);\r\n    this.setState({\r\n      arrayWords: arrayWords,\r\n      ready: true,\r\n      counter: 60,\r\n      start: true,\r\n    });\r\n    let typing__render__char = document.getElementById(\"typing__render__char\");\r\n    let arrayChar = document.querySelectorAll(\"span.typing__char\");\r\n    const typing_input = document.getElementById(\"typing__input\");\r\n\r\n    typing__render__char.style.transform = \"translate(0px)\";\r\n    arrayChar.forEach((item) => {\r\n      // item.classList.remove(\"correct\");\r\n      item.classList.remove(\"incorrect\", \"correct\");\r\n      // item.classList.remove('')\r\n    });\r\n    typing_input.focus();\r\n  };\r\n  typing = () => {\r\n    console.log(\"typing render\");\r\n    let count = 0;\r\n    let traslateValue = 0;\r\n    let stringInput = \"\";\r\n    let typing__render = document.getElementById(\"typing__render\");\r\n    let typing__render__char = document.getElementById(\"typing__render__char\");\r\n    let arrayChar = document.querySelectorAll(\"span.typing__char\");\r\n    const typing_input = document.getElementById(\"typing__input\");\r\n    let averageCharWidth = Math.floor(\r\n      typing__render.clientWidth / 2 / arrayChar[0].clientWidth\r\n    );\r\n    let arrayCharLength = arrayChar.length;\r\n\r\n    arrayChar[count].classList.add(\"text_active\");\r\n    typing_input.addEventListener(\"keydown\", (e) => {\r\n      if (this.state.start) {\r\n        this.start();\r\n      }\r\n\r\n      if (typing_input.value) {\r\n        if (e.key == \" \") {\r\n          let arrayValue = typing_input.value.toString().trim();\r\n          stringInput += typing_input.value.toString();\r\n          if (arrayValue == arrayChar[count].innerText) {\r\n            arrayChar[count].classList.add(\"correct\");\r\n          } else {\r\n            arrayChar[count].classList.add(\"incorrect\");\r\n          }\r\n          typing_input.value = \"\";\r\n          arrayChar[count].classList.remove(\"text_active\");\r\n          if (count >= averageCharWidth) {\r\n            traslateValue += arrayChar[count].clientWidth;\r\n            typing__render__char.style.transform = `translateX(-${traslateValue}px)`;\r\n          }\r\n          if (count > arrayCharLength - 1) {\r\n            typing_input.readOnly = true;\r\n          } else {\r\n            count++;\r\n            try {\r\n              arrayChar[count].classList.add(\"text_active\");\r\n            } catch (err) {}\r\n          }\r\n        }\r\n      }\r\n      if (count === arrayCharLength) {\r\n        typing_input.readOnly = true;\r\n        clearInterval(this.state.timer);\r\n      }\r\n    });\r\n    if (this.state.counter == 0) {\r\n      typing_input.readOnly = true;\r\n      clearInterval(this.state.timer);\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.setUp();\r\n    if (this.state.ready) {\r\n      this.typing();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n  render() {\r\n    let arrayWordsRender = this.state.arrayWords;\r\n    return (\r\n      <div className=\"typing\">\r\n        <div id=\"typing__render\" className=\"typing__render\">\r\n          <div\r\n            id=\"typing__render__char\"\r\n            className=\"typing__render__char\"\r\n            style={{ \"--margin-char\": \"5px\", \"--fontSize-char\": \"17px\" }}\r\n          >\r\n            {Array.isArray(arrayWordsRender) &&\r\n              arrayWordsRender.length > 0 &&\r\n              arrayWordsRender.map((item, index) => (\r\n                <span className=\"typing__char\" key={index}>\r\n                  {item}\r\n                </span>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"typing__action\">\r\n          <input\r\n            id=\"typing__input\"\r\n            className=\"typing__action__input\"\r\n            type=\"text\"\r\n            style={{ \"--fontSize-input\": \"17px\" }}\r\n            autocomplete=\"off\"\r\n          />\r\n          <div className=\"typing__action__counter\">{this.state.counter}</div>\r\n          <button\r\n            className=\"typing__action__btn__restart\"\r\n            onClick={() => this.setUp()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\" />\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Typing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}