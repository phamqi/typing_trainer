{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\KeyBoard.jsx\";\nimport { click } from \"@testing-library/user-event/dist/click\";\nimport React, { Component } from \"react\";\nimport { keyboard } from \"../constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KeyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onShift: false,\n      onKey: \"\",\n      mbShow: true\n    };\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.addFncEvent = this.addFncEvent.bind(this);\n  }\n\n  onKeyDown(e) {\n    console.log(e.key);\n\n    switch (e.key) {\n      case \"Escape\":\n        this.setState({\n          onKey: \"~\"\n        });\n        break;\n\n      case \"CapsLock\":\n        this.setState({\n          onKey: \"Caps\"\n        });\n        break;\n\n      case \"Meta\":\n        this.setState({\n          onKey: \"⋈\"\n        });\n        break;\n\n      case \"ArrowUp\":\n        this.setState({\n          onKey: \"⇧\"\n        });\n        break;\n\n      case \"ArrowLeft\":\n        this.setState({\n          onKey: \"⇦\"\n        });\n        break;\n\n      case \"ArrowRight\":\n        this.setState({\n          onKey: \"⇨\"\n        });\n        break;\n\n      case \"ArrowDown\":\n        this.setState({\n          onKey: \"⇩\"\n        });\n        break;\n\n      case \"Delete\":\n        this.setState({\n          onKey: \"Del\"\n        });\n        break;\n\n      default:\n        this.setState({\n          onKey: e.key\n        });\n    }\n  }\n\n  addKeysEvent() {\n    const keys = document.querySelectorAll(\".keyboard__key.key\");\n    const typing__input = document.querySelector(\"#typing__input\");\n    keys.forEach((item, index) => {\n      item.onclick = function () {\n        typing__input.value += keys[index].innerText;\n        typing__input.focus();\n      };\n    });\n  }\n\n  addFncEvent() {\n    const fncs = document.querySelectorAll(\".keyboard__key.fnc\");\n    const typing__input = document.querySelector(\"#typing__input\");\n    console.log(fncs);\n    fncs.forEach((item, index) => {\n      item.onclick = () => {\n        console.log(fncs[index].innerText);\n\n        switch (fncs[index].innerText) {\n          case \"Backspace\":\n            const typingValue = typing__input.value.slice(0, -1);\n            typing__input.value = typingValue;\n            break;\n\n          case \"Shift\":\n            this.setState(prevState => ({\n              onShift: !prevState.onShift\n            }));\n        }\n      };\n    });\n  }\n\n  onKeyUp() {\n    this.setState({\n      onKey: \"\"\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onKeyDown);\n    window.addEventListener(\"keyup\", this.onKeyUp);\n    this.addKeysEvent();\n    this.addFncEvent();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    console.log(\"rerender in render keyborad\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"keyboard\",\n        className: this.state.mbShow ? \"keyboard mb-show\" : \"keyboard\",\n        \"data-skinstance\": \"simpleKeyboard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard__rows\",\n          children: keyboard && keyboard.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: index == 0 ? \"keyboard__row hidden-576\" : \"keyboard__row\",\n            children: item.map((keys, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.onKey === keys.txt || this.state.onKey === keys.shiftTxt ? `keyboard__key active ` + ` keyboard__key${keys.u}` + ` ${keys.type}` : \"keyboard__key\" + ` keyboard__key${keys.u}` + ` ${keys.type}`,\n              value: this.state.onShift || this.state.onKey === \"Shift\" ? keys.shiftTxt : keys.txt,\n              children: this.state.onShift || this.state.onKey === \"Shift\" ? keys.shiftTxt : keys.txt\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KeyBoard;","map":{"version":3,"names":["click","React","Component","keyboard","KeyBoard","constructor","props","state","onShift","onKey","mbShow","onKeyDown","bind","onKeyUp","addFncEvent","e","console","log","key","setState","addKeysEvent","keys","document","querySelectorAll","typing__input","querySelector","forEach","item","index","onclick","value","innerText","focus","fncs","typingValue","slice","prevState","componentDidMount","window","addEventListener","componentDidUpdate","render","map","txt","shiftTxt","u","type"],"sources":["C:/typing_trainer/src/component/KeyBoard.jsx"],"sourcesContent":["import { click } from \"@testing-library/user-event/dist/click\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { keyboard } from \"../constant\";\r\n\r\nclass KeyBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onShift: false,\r\n      onKey: \"\",\r\n      mbShow: true,\r\n    };\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.addFncEvent = this.addFncEvent.bind(this);\r\n  }\r\n  onKeyDown(e) {\r\n    console.log(e.key);\r\n    switch (e.key) {\r\n      case \"Escape\":\r\n        this.setState({\r\n          onKey: \"~\",\r\n        });\r\n        break;\r\n      case \"CapsLock\":\r\n        this.setState({\r\n          onKey: \"Caps\",\r\n        });\r\n        break;\r\n      case \"Meta\":\r\n        this.setState({\r\n          onKey: \"⋈\",\r\n        });\r\n        break;\r\n      case \"ArrowUp\":\r\n        this.setState({\r\n          onKey: \"⇧\",\r\n        });\r\n        break;\r\n      case \"ArrowLeft\":\r\n        this.setState({\r\n          onKey: \"⇦\",\r\n        });\r\n        break;\r\n      case \"ArrowRight\":\r\n        this.setState({\r\n          onKey: \"⇨\",\r\n        });\r\n        break;\r\n      case \"ArrowDown\":\r\n        this.setState({\r\n          onKey: \"⇩\",\r\n        });\r\n        break;\r\n      case \"Delete\":\r\n        this.setState({\r\n          onKey: \"Del\",\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          onKey: e.key,\r\n        });\r\n    }\r\n  }\r\n\r\n  addKeysEvent() {\r\n    const keys = document.querySelectorAll(\".keyboard__key.key\");\r\n    const typing__input = document.querySelector(\"#typing__input\");\r\n    keys.forEach((item, index) => {\r\n      item.onclick = function () {\r\n        typing__input.value += keys[index].innerText;\r\n        typing__input.focus();\r\n      };\r\n    });\r\n  }\r\n  addFncEvent() {\r\n    const fncs = document.querySelectorAll(\".keyboard__key.fnc\");\r\n    const typing__input = document.querySelector(\"#typing__input\");\r\n    console.log(fncs);\r\n    fncs.forEach((item, index) => {\r\n      item.onclick = () => {\r\n        console.log(fncs[index].innerText);\r\n        switch (fncs[index].innerText) {\r\n          case \"Backspace\":\r\n            const typingValue = typing__input.value.slice(0, -1);\r\n            typing__input.value = typingValue;\r\n            break;\r\n          case \"Shift\":\r\n            this.setState((prevState) => ({\r\n              onShift: !prevState.onShift,\r\n            }));\r\n        }\r\n      };\r\n    });\r\n  }\r\n  onKeyUp() {\r\n    this.setState({\r\n      onKey: \"\",\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onKeyDown);\r\n    window.addEventListener(\"keyup\", this.onKeyUp);\r\n    this.addKeysEvent();\r\n    this.addFncEvent();\r\n  }\r\n  componentDidUpdate() {}\r\n  render() {\r\n    console.log(\"rerender in render keyborad\");\r\n    return (\r\n      <div className=\"keyboard__wrapper\">\r\n        <div\r\n          id=\"keyboard\"\r\n          className={this.state.mbShow ? \"keyboard mb-show\" : \"keyboard\"}\r\n          data-skinstance=\"simpleKeyboard\"\r\n        >\r\n          <div className=\"keyboard__rows\">\r\n            {keyboard &&\r\n              keyboard.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={\r\n                    index == 0 ? \"keyboard__row hidden-576\" : \"keyboard__row\"\r\n                  }\r\n                >\r\n                  {item.map((keys, index) => (\r\n                    <button\r\n                      key={index}\r\n                      className={\r\n                        this.state.onKey === keys.txt ||\r\n                        this.state.onKey === keys.shiftTxt\r\n                          ? `keyboard__key active ` +\r\n                            ` keyboard__key${keys.u}` +\r\n                            ` ${keys.type}`\r\n                          : \"keyboard__key\" +\r\n                            ` keyboard__key${keys.u}` +\r\n                            ` ${keys.type}`\r\n                      }\r\n                      value={\r\n                        this.state.onShift || this.state.onKey === \"Shift\"\r\n                          ? keys.shiftTxt\r\n                          : keys.txt\r\n                      }\r\n                    >\r\n                      {this.state.onShift || this.state.onKey === \"Shift\"\r\n                        ? keys.shiftTxt\r\n                        : keys.txt}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}