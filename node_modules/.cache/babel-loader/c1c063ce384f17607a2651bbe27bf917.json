{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Keyboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keyboard extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.setUp = () => {\n      let quoteRender = document.getElementById(\"quote_render\");\n      let quote = \"Tao khong noi vi tao lam ban tay khong con \";\n      quote.split(\" \").forEach(item => {\n        let span = document.createElement(\"span\");\n        span.innerText = item;\n        quoteRender.appendChild(span);\n      });\n    };\n\n    this.inputEvent = () => {\n      let count = 0;\n      let quoteInput = document.getElementById(\"quote_input\");\n      let arrayQuote = document.querySelectorAll(\"span\");\n      quoteInput.addEventListener(\"input\", e => {\n        let arrayValue = quoteInput.value.split(\" \");\n\n        if (e.data === \" \") {\n          if (arrayQuote[count].innerText == arrayValue[0]) {\n            arrayQuote[count].classList.add(\"correct\");\n            arrayQuote[count].classList.remove(\"incorrect\");\n            console.log(count);\n            console.log(\"a\", arrayQuote[count].innerText, \"b\", arrayValue[0]);\n          }\n\n          quoteInput.value = \"\";\n          count++;\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"render\");\n    this.setUp();\n    this.inputEvent();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote_render\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quote_input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Keyboard;","map":{"version":3,"names":["React","Component","Keyboard","setUp","quoteRender","document","getElementById","quote","split","forEach","item","span","createElement","innerText","appendChild","inputEvent","count","quoteInput","arrayQuote","querySelectorAll","addEventListener","e","arrayValue","value","data","classList","add","remove","console","log","componentDidMount","shouldComponentUpdate","render"],"sources":["C:/typing_trainer/src/component/Keyboard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nclass Keyboard extends Component {\r\n  setUp = () => {\r\n    let quoteRender = document.getElementById(\"quote_render\");\r\n    let quote = \"Tao khong noi vi tao lam ban tay khong con \";\r\n    quote.split(\" \").forEach((item) => {\r\n      let span = document.createElement(\"span\");\r\n      span.innerText = item;\r\n      quoteRender.appendChild(span);\r\n    });\r\n  };\r\n  inputEvent = () => {\r\n    let count = 0;\r\n    let quoteInput = document.getElementById(\"quote_input\");\r\n    let arrayQuote = document.querySelectorAll(\"span\");\r\n    quoteInput.addEventListener(\"input\", (e) => {\r\n      let arrayValue = quoteInput.value.split(\" \");\r\n      if (e.data === \" \") {\r\n        if (arrayQuote[count].innerText == arrayValue[0]) {\r\n          arrayQuote[count].classList.add(\"correct\");\r\n          arrayQuote[count].classList.remove(\"incorrect\");\r\n          console.log(count);\r\n          console.log(\"a\", arrayQuote[count].innerText, \"b\", arrayValue[0]);\r\n        }\r\n        quoteInput.value = \"\";\r\n        count++;\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"render\");\r\n    this.setUp();\r\n    this.inputEvent();\r\n  }\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div id=\"quote_render\"></div>\r\n        <input id=\"quote_input\" type=\"text\" />\r\n        <div className=\"key\">A</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;EAAA;IAAA;;IAAA,KAC/BE,KAD+B,GACvB,MAAM;MACZ,IAAIC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;MACA,IAAIC,KAAK,GAAG,6CAAZ;MACAA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,CAA0BC,IAAD,IAAU;QACjC,IAAIC,IAAI,GAAGN,QAAQ,CAACO,aAAT,CAAuB,MAAvB,CAAX;QACAD,IAAI,CAACE,SAAL,GAAiBH,IAAjB;QACAN,WAAW,CAACU,WAAZ,CAAwBH,IAAxB;MACD,CAJD;IAKD,CAT8B;;IAAA,KAU/BI,UAV+B,GAUlB,MAAM;MACjB,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAIC,UAAU,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAjB;MACA,IAAIY,UAAU,GAAGb,QAAQ,CAACc,gBAAT,CAA0B,MAA1B,CAAjB;MACAF,UAAU,CAACG,gBAAX,CAA4B,OAA5B,EAAsCC,CAAD,IAAO;QAC1C,IAAIC,UAAU,GAAGL,UAAU,CAACM,KAAX,CAAiBf,KAAjB,CAAuB,GAAvB,CAAjB;;QACA,IAAIa,CAAC,CAACG,IAAF,KAAW,GAAf,EAAoB;UAClB,IAAIN,UAAU,CAACF,KAAD,CAAV,CAAkBH,SAAlB,IAA+BS,UAAU,CAAC,CAAD,CAA7C,EAAkD;YAChDJ,UAAU,CAACF,KAAD,CAAV,CAAkBS,SAAlB,CAA4BC,GAA5B,CAAgC,SAAhC;YACAR,UAAU,CAACF,KAAD,CAAV,CAAkBS,SAAlB,CAA4BE,MAA5B,CAAmC,WAAnC;YACAC,OAAO,CAACC,GAAR,CAAYb,KAAZ;YACAY,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBX,UAAU,CAACF,KAAD,CAAV,CAAkBH,SAAnC,EAA8C,GAA9C,EAAmDS,UAAU,CAAC,CAAD,CAA7D;UACD;;UACDL,UAAU,CAACM,KAAX,GAAmB,EAAnB;UACAP,KAAK;QACN;MACF,CAZD;IAaD,CA3B8B;EAAA;;EA4B/Bc,iBAAiB,GAAG;IAClBF,OAAO,CAACC,GAAR,CAAY,QAAZ;IACA,KAAK1B,KAAL;IACA,KAAKY,UAAL;EACD;;EACDgB,qBAAqB,GAAG;IACtB,OAAO,KAAP;EACD;;EACDC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,EAAE,EAAC;MAAR;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,EAAE,EAAC,aAAV;QAAwB,IAAI,EAAC;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,KAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;AA5C8B;;AA+CjC,eAAe9B,QAAf"},"metadata":{},"sourceType":"module"}