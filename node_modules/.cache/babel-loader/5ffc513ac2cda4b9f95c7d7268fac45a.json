{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Typing.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { vocabulary } from \"../contans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Typing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUp = () => {\n      let arrayWords = [];\n      let wordsAmount = 400;\n      let wordsLength = vocabulary.length;\n      let random, word;\n\n      for (var i = 0; i <= wordsAmount; i++) {\n        random = Math.floor(Math.random() * wordsLength);\n        word = vocabulary[random];\n        arrayWords.push(word);\n      }\n\n      this.setState({\n        arrayWords: arrayWords\n      });\n    };\n\n    this.typing = () => {\n      let count = 0;\n      let arrayChar = document.querySelectorAll(\"span.typing__char\");\n      let arrayCharLength = arrayChar.length;\n      const typing_input = document.getElementById(\"typing_input\");\n      typing_input.addEventListener(\"keyup\", function (e) {\n        if (typing_input.value) {\n          if (e.key == \" \") {\n            let arrayValue = typing_input.value.toString().trim();\n\n            if (arrayValue == arrayChar[count].innerText) {\n              arrayChar[count].classList.add(\"correct\");\n            } else {\n              arrayChar[count].classList.add(\"incorrect\");\n            }\n\n            arrayChar[count].classList.remove(\"text_active\");\n            count++;\n            typing_input.value = \"\";\n            arrayChar[count].classList.add(\"text_active\");\n          }\n        }\n\n        if (count === arrayCharLength) {\n          typing_input.readOnly = true;\n        }\n      });\n    };\n\n    this.state = {\n      arrayWords: [],\n      quoteEN: \"scale OOP java constructor \"\n    };\n    console.log(\"app rerender\");\n  }\n\n  componentWillMount() {\n    this.setUp();\n  }\n\n  componentDidMount() {\n    this.typing();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    let arrayWordsRender = this.state.arrayWords;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing__render\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing__render__char\",\n          style: {\n            \"--margin-char\": \"5px\",\n            \"--fontSzie-char\": \"17px\"\n          },\n          children: Array.isArray(arrayWordsRender) && arrayWordsRender.length > 0 && arrayWordsRender.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing__char\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"typing_input\",\n        className: \"typing_input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Typing;","map":{"version":3,"names":["React","Component","vocabulary","Typing","constructor","props","setUp","arrayWords","wordsAmount","wordsLength","length","random","word","i","Math","floor","push","setState","typing","count","arrayChar","document","querySelectorAll","arrayCharLength","typing_input","getElementById","addEventListener","e","value","key","arrayValue","toString","trim","innerText","classList","add","remove","readOnly","state","quoteEN","console","log","componentWillMount","componentDidMount","componentDidUpdate","render","arrayWordsRender","Array","isArray","map","item","index"],"sources":["C:/typing_trainer/src/component/Typing.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./styles.scss\";\r\nimport { vocabulary } from \"../contans\";\r\n\r\nclass Typing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrayWords: [],\r\n      quoteEN: \"scale OOP java constructor \",\r\n    };\r\n    console.log(\"app rerender\");\r\n  }\r\n  setUp = () => {\r\n    let arrayWords = [];\r\n    let wordsAmount = 400;\r\n    let wordsLength = vocabulary.length;\r\n    let random, word;\r\n    for (var i = 0; i <= wordsAmount; i++) {\r\n      random = Math.floor(Math.random() * wordsLength);\r\n      word = vocabulary[random];\r\n      arrayWords.push(word);\r\n    }\r\n    this.setState({\r\n      arrayWords: arrayWords,\r\n    });\r\n  };\r\n  typing = () => {\r\n    let count = 0;\r\n    let arrayChar = document.querySelectorAll(\"span.typing__char\");\r\n    let arrayCharLength = arrayChar.length;\r\n    const typing_input = document.getElementById(\"typing_input\");\r\n    typing_input.addEventListener(\"keyup\", function (e) {\r\n      if (typing_input.value) {\r\n        if (e.key == \" \") {\r\n          let arrayValue = typing_input.value.toString().trim();\r\n          if (arrayValue == arrayChar[count].innerText) {\r\n            arrayChar[count].classList.add(\"correct\");\r\n          } else {\r\n            arrayChar[count].classList.add(\"incorrect\");\r\n          }\r\n          arrayChar[count].classList.remove(\"text_active\");\r\n          count++;\r\n          typing_input.value = \"\";\r\n          arrayChar[count].classList.add(\"text_active\");\r\n        }\r\n      }\r\n      if (count === arrayCharLength) {\r\n        typing_input.readOnly = true;\r\n      }\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    this.setUp();\r\n  }\r\n  componentDidMount() {\r\n    this.typing();\r\n  }\r\n  componentDidUpdate() {}\r\n  render() {\r\n    let arrayWordsRender = this.state.arrayWords;\r\n    return (\r\n      <div className=\"typing\">\r\n        <div className=\"typing__render\">\r\n          <div\r\n            className=\"typing__render__char\"\r\n            style={{ \"--margin-char\": \"5px\", \"--fontSzie-char\": \"17px\" }}\r\n          >\r\n            {Array.isArray(arrayWordsRender) &&\r\n              arrayWordsRender.length > 0 &&\r\n              arrayWordsRender.map((item, index) => (\r\n                <span className=\"typing__char\" key={index}>\r\n                  {item}\r\n                </span>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <input id=\"typing_input\" className=\"typing_input\" type=\"text\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Typing;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,YAA3B;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;EAC7BG,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAQnBC,KARmB,GAQX,MAAM;MACZ,IAAIC,UAAU,GAAG,EAAjB;MACA,IAAIC,WAAW,GAAG,GAAlB;MACA,IAAIC,WAAW,GAAGP,UAAU,CAACQ,MAA7B;MACA,IAAIC,MAAJ,EAAYC,IAAZ;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,WAArB,EAAkCK,CAAC,EAAnC,EAAuC;QACrCF,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,KAAgBF,WAA3B,CAAT;QACAG,IAAI,GAAGV,UAAU,CAACS,MAAD,CAAjB;QACAJ,UAAU,CAACS,IAAX,CAAgBJ,IAAhB;MACD;;MACD,KAAKK,QAAL,CAAc;QACZV,UAAU,EAAEA;MADA,CAAd;IAGD,CArBkB;;IAAA,KAsBnBW,MAtBmB,GAsBV,MAAM;MACb,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAIC,SAAS,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,mBAA1B,CAAhB;MACA,IAAIC,eAAe,GAAGH,SAAS,CAACV,MAAhC;MACA,MAAMc,YAAY,GAAGH,QAAQ,CAACI,cAAT,CAAwB,cAAxB,CAArB;MACAD,YAAY,CAACE,gBAAb,CAA8B,OAA9B,EAAuC,UAAUC,CAAV,EAAa;QAClD,IAAIH,YAAY,CAACI,KAAjB,EAAwB;UACtB,IAAID,CAAC,CAACE,GAAF,IAAS,GAAb,EAAkB;YAChB,IAAIC,UAAU,GAAGN,YAAY,CAACI,KAAb,CAAmBG,QAAnB,GAA8BC,IAA9B,EAAjB;;YACA,IAAIF,UAAU,IAAIV,SAAS,CAACD,KAAD,CAAT,CAAiBc,SAAnC,EAA8C;cAC5Cb,SAAS,CAACD,KAAD,CAAT,CAAiBe,SAAjB,CAA2BC,GAA3B,CAA+B,SAA/B;YACD,CAFD,MAEO;cACLf,SAAS,CAACD,KAAD,CAAT,CAAiBe,SAAjB,CAA2BC,GAA3B,CAA+B,WAA/B;YACD;;YACDf,SAAS,CAACD,KAAD,CAAT,CAAiBe,SAAjB,CAA2BE,MAA3B,CAAkC,aAAlC;YACAjB,KAAK;YACLK,YAAY,CAACI,KAAb,GAAqB,EAArB;YACAR,SAAS,CAACD,KAAD,CAAT,CAAiBe,SAAjB,CAA2BC,GAA3B,CAA+B,aAA/B;UACD;QACF;;QACD,IAAIhB,KAAK,KAAKI,eAAd,EAA+B;UAC7BC,YAAY,CAACa,QAAb,GAAwB,IAAxB;QACD;MACF,CAlBD;IAmBD,CA9CkB;;IAEjB,KAAKC,KAAL,GAAa;MACX/B,UAAU,EAAE,EADD;MAEXgC,OAAO,EAAE;IAFE,CAAb;IAIAC,OAAO,CAACC,GAAR,CAAY,cAAZ;EACD;;EAwCDC,kBAAkB,GAAG;IACnB,KAAKpC,KAAL;EACD;;EACDqC,iBAAiB,GAAG;IAClB,KAAKzB,MAAL;EACD;;EACD0B,kBAAkB,GAAG,CAAE;;EACvBC,MAAM,GAAG;IACP,IAAIC,gBAAgB,GAAG,KAAKR,KAAL,CAAW/B,UAAlC;IACA,oBACE;MAAK,SAAS,EAAC,QAAf;MAAA,wBACE;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE;UACE,SAAS,EAAC,sBADZ;UAEE,KAAK,EAAE;YAAE,iBAAiB,KAAnB;YAA0B,mBAAmB;UAA7C,CAFT;UAAA,UAIGwC,KAAK,CAACC,OAAN,CAAcF,gBAAd,KACCA,gBAAgB,CAACpC,MAAjB,GAA0B,CAD3B,IAECoC,gBAAgB,CAACG,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACnB;YAAM,SAAS,EAAC,cAAhB;YAAA,UACGD;UADH,GAAoCC,KAApC;YAAA;YAAA;YAAA;UAAA,QADF;QANJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAeE;QAAO,EAAE,EAAC,cAAV;QAAyB,SAAS,EAAC,cAAnC;QAAkD,IAAI,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAmBD;;AA5E4B;;AA+E/B,eAAehD,MAAf"},"metadata":{},"sourceType":"module"}