{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Keyboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keyboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      let count = 0;\n      let arrayQuote = document.querySelectorAll(\"span\");\n      console.log(e.target.value);\n      let arrayValue = e.target.value.split(\" \");\n      console.log(e.key, \"a\", arrayValue[0], \"b\", arrayQuote[count].innerText);\n\n      if (e.key == \" \") {\n        console.log(\"a\", arrayValue[0], \"b\", arrayQuote[count].innerText);\n\n        if (arrayValue[0] == arrayQuote[count].innerText) {\n          arrayQuote[count].classList.add(\"correct\");\n        }\n\n        e.target.value = \"\";\n      }\n    };\n\n    this.state = {\n      quote: \"Tao khong noi vi tao lam ban tay khong con \"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"render\");\n  }\n\n  render() {\n    let arrayChar = this.state.quote.split(\" \");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote_render\",\n        children: arrayChar && arrayChar.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quote_input\",\n        type: \"text\",\n        onKeyPress: e => this.onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Keyboard;","map":{"version":3,"names":["React","Component","Keyboard","constructor","props","onChange","e","count","arrayQuote","document","querySelectorAll","console","log","target","value","arrayValue","split","key","innerText","classList","add","state","quote","componentDidMount","render","arrayChar","map","item","index"],"sources":["C:/typing_trainer/src/component/Keyboard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nclass Keyboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quote: \"Tao khong noi vi tao lam ban tay khong con \",\r\n    };\r\n  }\r\n  onChange = (e) => {\r\n    let count = 0;\r\n    let arrayQuote = document.querySelectorAll(\"span\");\r\n    console.log(e.target.value);\r\n    let arrayValue = e.target.value.split(\" \");\r\n    console.log(e.key, \"a\", arrayValue[0], \"b\", arrayQuote[count].innerText);\r\n    if (e.key == \" \") {\r\n      console.log(\"a\", arrayValue[0], \"b\", arrayQuote[count].innerText);\r\n      if (arrayValue[0] == arrayQuote[count].innerText) {\r\n        arrayQuote[count].classList.add(\"correct\");\r\n      }\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"render\");\r\n  }\r\n  render() {\r\n    let arrayChar = this.state.quote.split(\" \");\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div id=\"quote_render\">\r\n          {arrayChar &&\r\n            arrayChar.map((item, index) => <span key={index}>{item}</span>)}\r\n        </div>\r\n        <input\r\n          id=\"quote_input\"\r\n          type=\"text\"\r\n          onKeyPress={(e) => this.onChange(e)}\r\n        />\r\n        <div className=\"key\">A</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;EAC/BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAMnBC,QANmB,GAMPC,CAAD,IAAO;MAChB,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAIC,UAAU,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,MAA1B,CAAjB;MACAC,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACO,MAAF,CAASC,KAArB;MACA,IAAIC,UAAU,GAAGT,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeE,KAAf,CAAqB,GAArB,CAAjB;MACAL,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACW,GAAd,EAAmB,GAAnB,EAAwBF,UAAU,CAAC,CAAD,CAAlC,EAAuC,GAAvC,EAA4CP,UAAU,CAACD,KAAD,CAAV,CAAkBW,SAA9D;;MACA,IAAIZ,CAAC,CAACW,GAAF,IAAS,GAAb,EAAkB;QAChBN,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBG,UAAU,CAAC,CAAD,CAA3B,EAAgC,GAAhC,EAAqCP,UAAU,CAACD,KAAD,CAAV,CAAkBW,SAAvD;;QACA,IAAIH,UAAU,CAAC,CAAD,CAAV,IAAiBP,UAAU,CAACD,KAAD,CAAV,CAAkBW,SAAvC,EAAkD;UAChDV,UAAU,CAACD,KAAD,CAAV,CAAkBY,SAAlB,CAA4BC,GAA5B,CAAgC,SAAhC;QACD;;QACDd,CAAC,CAACO,MAAF,CAASC,KAAT,GAAiB,EAAjB;MACD;IACF,CAnBkB;;IAEjB,KAAKO,KAAL,GAAa;MACXC,KAAK,EAAE;IADI,CAAb;EAGD;;EAeDC,iBAAiB,GAAG;IAClBZ,OAAO,CAACC,GAAR,CAAY,QAAZ;EACD;;EACDY,MAAM,GAAG;IACP,IAAIC,SAAS,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBN,KAAjB,CAAuB,GAAvB,CAAhB;IACA,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,EAAE,EAAC,cAAR;QAAA,UACGS,SAAS,IACRA,SAAS,CAACC,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBAAiB;UAAA,UAAmBD;QAAnB,GAAWC,KAAX;UAAA;UAAA;UAAA;QAAA,QAA/B;MAFJ;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QACE,EAAE,EAAC,aADL;QAEE,IAAI,EAAC,MAFP;QAGE,UAAU,EAAGtB,CAAD,IAAO,KAAKD,QAAL,CAAcC,CAAd;MAHrB;QAAA;QAAA;QAAA;MAAA,QALF,eAUE;QAAK,SAAS,EAAC,KAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAcD;;AAxC8B;;AA2CjC,eAAeJ,QAAf"},"metadata":{},"sourceType":"module"}