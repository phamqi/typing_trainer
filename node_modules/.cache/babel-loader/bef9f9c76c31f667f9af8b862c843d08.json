{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\KeyBoard.jsx\";\nimport React, { Component } from \"react\";\nimport { keyboard } from \"../constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KeyBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onShift = () => {\n      console.log(\"on shift func\");\n      window.addEventListener(\"keydown\", e => {\n        if (e.key === \"Shift\" | e.key === \"ShiftLeft\") {\n          this.setState(prevState => ({\n            onShift: !prevState.onShift\n          }));\n          console.log(\"in onshift\", this.state.onShift);\n        }\n      });\n    };\n\n    this.onKey = () => {\n      console.log(\"re deleace\");\n      window.addEventListener(\"keydown\", e => {\n        switch (e.key) {\n          case \"Escape\":\n            this.setState({\n              onKey: \"~\"\n            });\n            break;\n\n          default:\n            this.setState({\n              onKey: e.key\n            });\n        }\n\n        window.addEventListener(\"keyup\", e => {\n          this.setState({\n            onKey: \"\"\n          });\n        });\n      });\n    };\n\n    this.state = {\n      onShift: false,\n      onKey: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.onKey();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard\",\n        \"data-skinstance\": \"simpleKeyboard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard__rows\",\n          children: keyboard && keyboard.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"keyboard__row\",\n            children: item.map(keys => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.onKey === keys.txt || this.state.onKey === keys.shiftTxt ? `keyboard__key active ` + ` ${keys.u}` : \"keyboard__key\" + ` ${keys.u}`,\n              children: this.state.onShift ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: keys.shiftTxt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: keys.txt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KeyBoard;","map":{"version":3,"names":["React","Component","keyboard","KeyBoard","constructor","props","onShift","console","log","window","addEventListener","e","key","setState","prevState","state","onKey","componentDidMount","componentDidUpdate","render","map","item","keys","txt","shiftTxt","u"],"sources":["C:/typing_trainer/src/component/KeyBoard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { keyboard } from \"../constant\";\r\n\r\nclass KeyBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onShift: false,\r\n      onKey: \"\",\r\n    };\r\n  }\r\n  onShift = () => {\r\n    console.log(\"on shift func\");\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if ((e.key === \"Shift\") | (e.key === \"ShiftLeft\")) {\r\n        this.setState((prevState) => ({\r\n          onShift: !prevState.onShift,\r\n        }));\r\n        console.log(\"in onshift\", this.state.onShift);\r\n      }\r\n    });\r\n  };\r\n  onKey = () => {\r\n    console.log(\"re deleace\");\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      switch (e.key) {\r\n        case \"Escape\":\r\n          this.setState({\r\n            onKey: \"~\",\r\n          });\r\n          break;\r\n        default:\r\n          this.setState({\r\n            onKey: e.key,\r\n          });\r\n      }\r\n      window.addEventListener(\"keyup\", (e) => {\r\n        this.setState({\r\n          onKey: \"\",\r\n        });\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.onKey();\r\n  }\r\n  componentDidUpdate() {}\r\n  render() {\r\n    return (\r\n      <div className=\"keyboard__wrapper\">\r\n        <div className=\"keyboard\" data-skinstance=\"simpleKeyboard\">\r\n          <div className=\"keyboard__rows\">\r\n            {keyboard &&\r\n              keyboard.map((item) => (\r\n                <div className=\"keyboard__row\">\r\n                  {item.map((keys) => (\r\n                    <div\r\n                      className={\r\n                        this.state.onKey === keys.txt ||\r\n                        this.state.onKey === keys.shiftTxt\r\n                          ? `keyboard__key active ` + ` ${keys.u}`\r\n                          : \"keyboard__key\" + ` ${keys.u}`\r\n                      }\r\n                    >\r\n                      {this.state.onShift ? (\r\n                        <span>{keys.shiftTxt}</span>\r\n                      ) : (\r\n                        <span>{keys.txt}</span>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyBoard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;EAC/BG,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBC,OAPmB,GAOT,MAAM;MACdC,OAAO,CAACC,GAAR,CAAY,eAAZ;MACAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,CAAD,IAAO;QACxC,IAAKA,CAAC,CAACC,GAAF,KAAU,OAAX,GAAuBD,CAAC,CAACC,GAAF,KAAU,WAArC,EAAmD;UACjD,KAAKC,QAAL,CAAeC,SAAD,KAAgB;YAC5BR,OAAO,EAAE,CAACQ,SAAS,CAACR;UADQ,CAAhB,CAAd;UAGAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKO,KAAL,CAAWT,OAArC;QACD;MACF,CAPD;IAQD,CAjBkB;;IAAA,KAkBnBU,KAlBmB,GAkBX,MAAM;MACZT,OAAO,CAACC,GAAR,CAAY,YAAZ;MACAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,CAAD,IAAO;QACxC,QAAQA,CAAC,CAACC,GAAV;UACE,KAAK,QAAL;YACE,KAAKC,QAAL,CAAc;cACZG,KAAK,EAAE;YADK,CAAd;YAGA;;UACF;YACE,KAAKH,QAAL,CAAc;cACZG,KAAK,EAAEL,CAAC,CAACC;YADG,CAAd;QAPJ;;QAWAH,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAkCC,CAAD,IAAO;UACtC,KAAKE,QAAL,CAAc;YACZG,KAAK,EAAE;UADK,CAAd;QAGD,CAJD;MAKD,CAjBD;IAkBD,CAtCkB;;IAEjB,KAAKD,KAAL,GAAa;MACXT,OAAO,EAAE,KADE;MAEXU,KAAK,EAAE;IAFI,CAAb;EAID;;EAiCDC,iBAAiB,GAAG;IAClB,KAAKD,KAAL;EACD;;EACDE,kBAAkB,GAAG,CAAE;;EACvBC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAA0B,mBAAgB,gBAA1C;QAAA,uBACE;UAAK,SAAS,EAAC,gBAAf;UAAA,UACGjB,QAAQ,IACPA,QAAQ,CAACkB,GAAT,CAAcC,IAAD,iBACX;YAAK,SAAS,EAAC,eAAf;YAAA,UACGA,IAAI,CAACD,GAAL,CAAUE,IAAD,iBACR;cACE,SAAS,EACP,KAAKP,KAAL,CAAWC,KAAX,KAAqBM,IAAI,CAACC,GAA1B,IACA,KAAKR,KAAL,CAAWC,KAAX,KAAqBM,IAAI,CAACE,QAD1B,GAEK,uBAAD,GAA2B,IAAGF,IAAI,CAACG,CAAE,EAFzC,GAGI,kBAAmB,IAAGH,IAAI,CAACG,CAAE,EALrC;cAAA,UAQG,KAAKV,KAAL,CAAWT,OAAX,gBACC;gBAAA,UAAOgB,IAAI,CAACE;cAAZ;gBAAA;gBAAA;gBAAA;cAAA,QADD,gBAGC;gBAAA,UAAOF,IAAI,CAACC;cAAZ;gBAAA;gBAAA;gBAAA;cAAA;YAXJ;cAAA;cAAA;cAAA;YAAA,QADD;UADH;YAAA;YAAA;YAAA;UAAA,QADF;QAFJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA6BD;;AA1E8B;;AA6EjC,eAAepB,QAAf"},"metadata":{},"sourceType":"module"}