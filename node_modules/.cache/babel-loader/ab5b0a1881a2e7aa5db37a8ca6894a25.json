{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Typing.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { vocabulary } from \"../contans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Typing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.start = () => {\n      this.setState({\n        start: false\n      });\n      const timer = setInterval(() => {\n        if (this.state.counter == 0) {\n          clearInterval(timer);\n          console.log(\"timer\", this.state.result);\n          this.props.result(this.state.result);\n          this.setUp();\n        } else {\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n        }\n      }, 1000);\n      this.setState({\n        timer: timer\n      });\n    };\n\n    this.initWords = () => {\n      console.log(\"init word\");\n      let arrayWords = [];\n      let wordsAmount = 10;\n      let wordsLength = vocabulary.length;\n      let random, word;\n\n      for (var i = 0; i <= wordsAmount; i++) {\n        random = Math.floor(Math.random() * wordsLength);\n        word = vocabulary[random];\n        arrayWords.push(word);\n      }\n\n      clearInterval(this.state.timer);\n      this.setState({\n        arrayWords: arrayWords,\n        ready: true,\n        counter: 10,\n        start: true\n      });\n    };\n\n    this.typing = () => {\n      console.log(\"typing render\");\n      let count = 0;\n      let keystrokes = 0;\n      let traslateValue = 0;\n      let stringInput = \"\";\n      let typing__render = document.getElementById(\"typing__render\");\n      let typing__render__char = document.getElementById(\"typing__render__char\");\n      let arrayChar = document.querySelectorAll(\"span.typing__char\");\n      const typing_input = document.getElementById(\"typing__input\");\n      typing__render__char.style.transform = \"translate(0px)\";\n      arrayChar.forEach(item => {\n        item.classList.remove(\"incorrect\", \"correct\", \"text_active\");\n      });\n      typing_input.focus();\n      typing_input.value = \"\";\n      typing_input.readOnly = false;\n      let averageCharWidth = Math.floor(typing__render.clientWidth / 2 / arrayChar[0].clientWidth);\n      let arrayCharLength = arrayChar.length;\n      arrayChar[count].classList.add(\"text_active\");\n      typing_input.addEventListener(\"keydown\", e => {\n        if (this.state.start) {\n          this.start();\n        }\n\n        keystrokes++;\n\n        if (typing_input.value) {\n          if (e.key == \" \") {\n            let arrayValue = typing_input.value.toString().trim();\n            stringInput += typing_input.value.toString();\n            this.setState({\n              result: {\n                stringInput: stringInput,\n                keystrokes: keystrokes\n              }\n            });\n\n            if (arrayValue == arrayChar[count].innerText) {\n              arrayChar[count].classList.add(\"correct\");\n            } else {\n              arrayChar[count].classList.add(\"incorrect\");\n            }\n\n            typing_input.value = \"\";\n            arrayChar[count].classList.remove(\"text_active\");\n\n            if (count >= averageCharWidth) {\n              traslateValue += arrayChar[count].clientWidth;\n              typing__render__char.style.transform = `translateX(-${traslateValue}px)`;\n            }\n\n            if (count === arrayCharLength - 1) {\n              clearInterval(this.state.timer);\n              this.props.result(this.state.result);\n              typing_input.readOnly = true;\n              count = 0;\n              keystrokes = 0;\n              traslateValue = 0;\n              stringInput = \"\";\n            } else {\n              count++;\n\n              try {\n                arrayChar[count].classList.add(\"text_active\");\n              } catch (err) {}\n            }\n          }\n        }\n      });\n    };\n\n    this.state = {\n      arrayWords: [],\n      counter: 10,\n      start: true,\n      ready: false,\n      result: {}\n    };\n    this.abc = \"hello \";\n    console.log(\"app rerender\");\n    this.setUp = this.setUp.bind(this);\n  }\n\n  async setUp() {\n    await this.initWords();\n\n    if (this.state.ready) {\n      this.typing();\n    }\n  }\n\n  componentDidMount() {\n    this.setUp();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    let arrayWordsRender = this.state.arrayWords;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"typing__render\",\n        className: \"typing__render\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"typing__render__char\",\n          className: \"typing__render__char\",\n          style: {\n            \"--margin-char\": \"5px\",\n            \"--fontSize-char\": \"17px\"\n          },\n          children: Array.isArray(arrayWordsRender) && arrayWordsRender.length > 0 && arrayWordsRender.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing__char\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing__action\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"typing__input\",\n          className: \"typing__action__input\",\n          type: \"text\",\n          style: {\n            \"--fontSize-input\": \"17px\"\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing__action__counter\",\n          children: this.state.counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"typing__action__btn__restart\",\n          onClick: () => this.setUp(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"currentColor\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Typing;","map":{"version":3,"names":["React","Component","vocabulary","Typing","constructor","props","start","setState","timer","setInterval","state","counter","clearInterval","console","log","result","setUp","prevState","initWords","arrayWords","wordsAmount","wordsLength","length","random","word","i","Math","floor","push","ready","typing","count","keystrokes","traslateValue","stringInput","typing__render","document","getElementById","typing__render__char","arrayChar","querySelectorAll","typing_input","style","transform","forEach","item","classList","remove","focus","value","readOnly","averageCharWidth","clientWidth","arrayCharLength","add","addEventListener","e","key","arrayValue","toString","trim","innerText","err","abc","bind","componentDidMount","componentDidUpdate","render","arrayWordsRender","Array","isArray","map","index"],"sources":["C:/typing_trainer/src/component/Typing.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./styles.scss\";\r\nimport { vocabulary } from \"../contans\";\r\n\r\nclass Typing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrayWords: [],\r\n      counter: 10,\r\n      start: true,\r\n      ready: false,\r\n      result: {},\r\n    };\r\n    this.abc = \"hello \";\r\n    console.log(\"app rerender\");\r\n    this.setUp = this.setUp.bind(this);\r\n  }\r\n  start = () => {\r\n    this.setState({\r\n      start: false,\r\n    });\r\n    const timer = setInterval(() => {\r\n      if (this.state.counter == 0) {\r\n        clearInterval(timer);\r\n        console.log(\"timer\", this.state.result);\r\n        this.props.result(this.state.result);\r\n        this.setUp();\r\n      } else {\r\n        this.setState((prevState) => {\r\n          return { counter: prevState.counter - 1 };\r\n        });\r\n      }\r\n    }, 1000);\r\n    this.setState({\r\n      timer: timer,\r\n    });\r\n  };\r\n\r\n  initWords = () => {\r\n    console.log(\"init word\");\r\n    let arrayWords = [];\r\n    let wordsAmount = 10;\r\n    let wordsLength = vocabulary.length;\r\n    let random, word;\r\n    for (var i = 0; i <= wordsAmount; i++) {\r\n      random = Math.floor(Math.random() * wordsLength);\r\n      word = vocabulary[random];\r\n      arrayWords.push(word);\r\n    }\r\n    clearInterval(this.state.timer);\r\n    this.setState({\r\n      arrayWords: arrayWords,\r\n      ready: true,\r\n      counter: 10,\r\n      start: true,\r\n    });\r\n  };\r\n  typing = () => {\r\n    console.log(\"typing render\");\r\n    let count = 0;\r\n    let keystrokes = 0;\r\n    let traslateValue = 0;\r\n    let stringInput = \"\";\r\n    let typing__render = document.getElementById(\"typing__render\");\r\n    let typing__render__char = document.getElementById(\"typing__render__char\");\r\n    let arrayChar = document.querySelectorAll(\"span.typing__char\");\r\n    const typing_input = document.getElementById(\"typing__input\");\r\n\r\n    typing__render__char.style.transform = \"translate(0px)\";\r\n    arrayChar.forEach((item) => {\r\n      item.classList.remove(\"incorrect\", \"correct\", \"text_active\");\r\n    });\r\n    typing_input.focus();\r\n    typing_input.value = \"\";\r\n    typing_input.readOnly = false;\r\n\r\n    let averageCharWidth = Math.floor(\r\n      typing__render.clientWidth / 2 / arrayChar[0].clientWidth\r\n    );\r\n    let arrayCharLength = arrayChar.length;\r\n\r\n    arrayChar[count].classList.add(\"text_active\");\r\n    typing_input.addEventListener(\"keydown\", (e) => {\r\n      if (this.state.start) {\r\n        this.start();\r\n      }\r\n\r\n      keystrokes++;\r\n      if (typing_input.value) {\r\n        if (e.key == \" \") {\r\n          let arrayValue = typing_input.value.toString().trim();\r\n          stringInput += typing_input.value.toString();\r\n          this.setState({\r\n            result: {\r\n              stringInput: stringInput,\r\n              keystrokes: keystrokes,\r\n            },\r\n          });\r\n          if (arrayValue == arrayChar[count].innerText) {\r\n            arrayChar[count].classList.add(\"correct\");\r\n          } else {\r\n            arrayChar[count].classList.add(\"incorrect\");\r\n          }\r\n          typing_input.value = \"\";\r\n          arrayChar[count].classList.remove(\"text_active\");\r\n          if (count >= averageCharWidth) {\r\n            traslateValue += arrayChar[count].clientWidth;\r\n            typing__render__char.style.transform = `translateX(-${traslateValue}px)`;\r\n          }\r\n          if (count === arrayCharLength - 1) {\r\n            clearInterval(this.state.timer);\r\n            this.props.result(this.state.result);\r\n            typing_input.readOnly = true;\r\n            count = 0;\r\n            keystrokes = 0;\r\n            traslateValue = 0;\r\n            stringInput = \"\";\r\n          } else {\r\n            count++;\r\n            try {\r\n              arrayChar[count].classList.add(\"text_active\");\r\n            } catch (err) {}\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n  async setUp() {\r\n    await this.initWords();\r\n    if (this.state.ready) {\r\n      this.typing();\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setUp();\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n  render() {\r\n    let arrayWordsRender = this.state.arrayWords;\r\n    return (\r\n      <div className=\"typing\">\r\n        <div id=\"typing__render\" className=\"typing__render\">\r\n          <div\r\n            id=\"typing__render__char\"\r\n            className=\"typing__render__char\"\r\n            style={{ \"--margin-char\": \"5px\", \"--fontSize-char\": \"17px\" }}\r\n          >\r\n            {Array.isArray(arrayWordsRender) &&\r\n              arrayWordsRender.length > 0 &&\r\n              arrayWordsRender.map((item, index) => (\r\n                <span className=\"typing__char\" key={index}>\r\n                  {item}\r\n                </span>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"typing__action\">\r\n          <input\r\n            id=\"typing__input\"\r\n            className=\"typing__action__input\"\r\n            type=\"text\"\r\n            style={{ \"--fontSize-input\": \"17px\" }}\r\n            autoComplete=\"off\"\r\n          />\r\n          <div className=\"typing__action__counter\">{this.state.counter}</div>\r\n          <button\r\n            className=\"typing__action__btn__restart\"\r\n            onClick={() => this.setUp()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\" />\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Typing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}