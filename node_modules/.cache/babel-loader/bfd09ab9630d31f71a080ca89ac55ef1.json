{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Keyboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keyboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUP = () => {\n      let count = 0;\n      let arrayQuote = document.querySelectorAll(\"span\");\n      const quote_input = document.getElementById(\"quote_input\");\n      quote_input.addEventListener(\"keydown\", function (e) {\n        let arrayValue = quote_input.value.toString().trim();\n        console.log(e.keyCode, \"a\", arrayValue, count);\n\n        if (e.keyCode == 32) {\n          console.log(\"a\", arrayValue, \"b\", arrayQuote[count].innerText);\n\n          if (arrayValue == arrayQuote[count].innerText) {\n            arrayQuote[count].classList.add(\"correct\");\n            quote_input.value = \"\";\n          }\n\n          quote_input.value = \"\";\n          count++;\n        }\n      });\n    };\n\n    this.state = {\n      quote: \"Tao khong noi vi tao lam ban tay khong con \"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"render\");\n    this.setUP();\n  }\n\n  render() {\n    let arrayChar = this.state.quote.split(\" \");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote_render\",\n        children: arrayChar && arrayChar.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item + \" \"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quote_input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Keyboard;","map":{"version":3,"names":["React","Component","Keyboard","constructor","props","setUP","count","arrayQuote","document","querySelectorAll","quote_input","getElementById","addEventListener","e","arrayValue","value","toString","trim","console","log","keyCode","innerText","classList","add","state","quote","componentDidMount","render","arrayChar","split","map","item","index"],"sources":["C:/typing_trainer/src/component/Keyboard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nclass Keyboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quote: \"Tao khong noi vi tao lam ban tay khong con \",\r\n    };\r\n  }\r\n  setUP = () => {\r\n    let count = 0;\r\n    let arrayQuote = document.querySelectorAll(\"span\");\r\n    const quote_input = document.getElementById(\"quote_input\");\r\n    quote_input.addEventListener(\"keydown\", function (e) {\r\n      let arrayValue = quote_input.value.toString().trim();\r\n      console.log(e.keyCode, \"a\", arrayValue, count);\r\n      if (e.keyCode == 32) {\r\n        console.log(\"a\", arrayValue, \"b\", arrayQuote[count].innerText);\r\n        if (arrayValue == arrayQuote[count].innerText) {\r\n          arrayQuote[count].classList.add(\"correct\");\r\n          quote_input.value = \"\";\r\n        }\r\n        quote_input.value = \"\";\r\n        count++;\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"render\");\r\n    this.setUP();\r\n  }\r\n  render() {\r\n    let arrayChar = this.state.quote.split(\" \");\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div id=\"quote_render\">\r\n          {arrayChar &&\r\n            arrayChar.map((item, index) => (\r\n              <span key={index}>{item + \" \"}</span>\r\n            ))}\r\n        </div>\r\n        <input id=\"quote_input\" type=\"text\" />\r\n        <div className=\"key\">A</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;EAC/BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAMnBC,KANmB,GAMX,MAAM;MACZ,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAIC,UAAU,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,MAA1B,CAAjB;MACA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAApB;MACAD,WAAW,CAACE,gBAAZ,CAA6B,SAA7B,EAAwC,UAAUC,CAAV,EAAa;QACnD,IAAIC,UAAU,GAAGJ,WAAW,CAACK,KAAZ,CAAkBC,QAAlB,GAA6BC,IAA7B,EAAjB;QACAC,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACO,OAAd,EAAuB,GAAvB,EAA4BN,UAA5B,EAAwCR,KAAxC;;QACA,IAAIO,CAAC,CAACO,OAAF,IAAa,EAAjB,EAAqB;UACnBF,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBL,UAAjB,EAA6B,GAA7B,EAAkCP,UAAU,CAACD,KAAD,CAAV,CAAkBe,SAApD;;UACA,IAAIP,UAAU,IAAIP,UAAU,CAACD,KAAD,CAAV,CAAkBe,SAApC,EAA+C;YAC7Cd,UAAU,CAACD,KAAD,CAAV,CAAkBgB,SAAlB,CAA4BC,GAA5B,CAAgC,SAAhC;YACAb,WAAW,CAACK,KAAZ,GAAoB,EAApB;UACD;;UACDL,WAAW,CAACK,KAAZ,GAAoB,EAApB;UACAT,KAAK;QACN;MACF,CAZD;IAaD,CAvBkB;;IAEjB,KAAKkB,KAAL,GAAa;MACXC,KAAK,EAAE;IADI,CAAb;EAGD;;EAmBDC,iBAAiB,GAAG;IAClBR,OAAO,CAACC,GAAR,CAAY,QAAZ;IACA,KAAKd,KAAL;EACD;;EACDsB,MAAM,GAAG;IACP,IAAIC,SAAS,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,KAAjB,CAAuB,GAAvB,CAAhB;IACA,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,EAAE,EAAC,cAAR;QAAA,UACGD,SAAS,IACRA,SAAS,CAACE,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACZ;UAAA,UAAmBD,IAAI,GAAG;QAA1B,GAAWC,KAAX;UAAA;UAAA;UAAA;QAAA,QADF;MAFJ;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAO,EAAE,EAAC,aAAV;QAAwB,IAAI,EAAC;MAA7B;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAK,SAAS,EAAC,KAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AA3C8B;;AA8CjC,eAAe9B,QAAf"},"metadata":{},"sourceType":"module"}