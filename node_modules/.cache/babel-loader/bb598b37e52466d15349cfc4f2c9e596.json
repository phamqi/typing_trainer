{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Keyboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keyboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUp = () => {\n      let count = 0;\n      let quoteInput = document.getElementById(\"quote_input\");\n      let quoteRender = document.getElementById(\"quote_render\");\n      let quote = \"Tao khong noi vi tao lam ban tay khong con \";\n      quote.split(\"\").forEach(item => {\n        let span = document.createElement(\"span\");\n        span.innerText = item;\n        quoteRender.appendChild(span);\n      });\n      let arrayQuote = quoteRender.querySelectorAll(\"span\");\n      quoteInput.addEventListener(\"input\", e => {\n        let arrayValue = quoteInput.value.split(\"\");\n\n        if (e.data == \"\") {\n          if (arrayQuote[count] == arrayValue[0]) {\n            console.log(arrayValue[0]);\n            console.log(count);\n          }\n\n          count++;\n        }\n      });\n    };\n\n    this.onChange = e => {\n      let a = e.target.value;\n      const text = \"abc\";\n      console.log(a);\n      console.log(text.charAt(0));\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setUp();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote_render\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quote_input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Keyboard;","map":{"version":3,"names":["React","Component","Keyboard","constructor","props","setUp","count","quoteInput","document","getElementById","quoteRender","quote","split","forEach","item","span","createElement","innerText","appendChild","arrayQuote","querySelectorAll","addEventListener","e","arrayValue","value","data","console","log","onChange","a","target","text","charAt","state","componentDidMount","render"],"sources":["C:/typing_trainer/src/component/Keyboard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nclass Keyboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  setUp = () => {\r\n    let count = 0;\r\n    let quoteInput = document.getElementById(\"quote_input\");\r\n    let quoteRender = document.getElementById(\"quote_render\");\r\n    let quote = \"Tao khong noi vi tao lam ban tay khong con \";\r\n    quote.split(\"\").forEach((item) => {\r\n      let span = document.createElement(\"span\");\r\n      span.innerText = item;\r\n      quoteRender.appendChild(span);\r\n    });\r\n    let arrayQuote = quoteRender.querySelectorAll(\"span\");\r\n    quoteInput.addEventListener(\"input\", (e) => {\r\n      let arrayValue = quoteInput.value.split(\"\");\r\n      if (e.data == \"\") {\r\n        if (arrayQuote[count] == arrayValue[0]) {\r\n          console.log(arrayValue[0]);\r\n          console.log(count);\r\n        }\r\n        count++;\r\n      }\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    let a = e.target.value;\r\n    const text = \"abc\";\r\n    console.log(a);\r\n    console.log(text.charAt(0));\r\n  };\r\n  componentDidMount() {\r\n    this.setUp();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div id=\"quote_render\"></div>\r\n        <input id=\"quote_input\" type=\"text\" />\r\n        <div className=\"key\">A</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;EAC/BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBC,KAPmB,GAOX,MAAM;MACZ,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAIC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAjB;MACA,IAAIC,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;MACA,IAAIE,KAAK,GAAG,6CAAZ;MACAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgBC,OAAhB,CAAyBC,IAAD,IAAU;QAChC,IAAIC,IAAI,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,MAAvB,CAAX;QACAD,IAAI,CAACE,SAAL,GAAiBH,IAAjB;QACAJ,WAAW,CAACQ,WAAZ,CAAwBH,IAAxB;MACD,CAJD;MAKA,IAAII,UAAU,GAAGT,WAAW,CAACU,gBAAZ,CAA6B,MAA7B,CAAjB;MACAb,UAAU,CAACc,gBAAX,CAA4B,OAA5B,EAAsCC,CAAD,IAAO;QAC1C,IAAIC,UAAU,GAAGhB,UAAU,CAACiB,KAAX,CAAiBZ,KAAjB,CAAuB,EAAvB,CAAjB;;QACA,IAAIU,CAAC,CAACG,IAAF,IAAU,EAAd,EAAkB;UAChB,IAAIN,UAAU,CAACb,KAAD,CAAV,IAAqBiB,UAAU,CAAC,CAAD,CAAnC,EAAwC;YACtCG,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAAC,CAAD,CAAtB;YACAG,OAAO,CAACC,GAAR,CAAYrB,KAAZ;UACD;;UACDA,KAAK;QACN;MACF,CATD;IAUD,CA5BkB;;IAAA,KA6BnBsB,QA7BmB,GA6BPN,CAAD,IAAO;MAChB,IAAIO,CAAC,GAAGP,CAAC,CAACQ,MAAF,CAASN,KAAjB;MACA,MAAMO,IAAI,GAAG,KAAb;MACAL,OAAO,CAACC,GAAR,CAAYE,CAAZ;MACAH,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,MAAL,CAAY,CAAZ,CAAZ;IACD,CAlCkB;;IAEjB,KAAKC,KAAL,GAAa;MACX3B,KAAK,EAAE;IADI,CAAb;EAGD;;EA8BD4B,iBAAiB,GAAG;IAClB,KAAK7B,KAAL;EACD;;EACD8B,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,EAAE,EAAC;MAAR;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,EAAE,EAAC,aAAV;QAAwB,IAAI,EAAC;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,KAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;AA/C8B;;AAkDjC,eAAejC,QAAf"},"metadata":{},"sourceType":"module"}