{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\KeyBoard.jsx\";\nimport { click } from \"@testing-library/user-event/dist/click\";\nimport React, { Component } from \"react\";\nimport { keyboard } from \"../constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KeyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onShift: false,\n      onKey: \"\"\n    };\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.onShift = this.onShift.bind(this);\n  }\n\n  onShift(e) {// console.log(\"on shift func\");\n    // window.addEventListener(\"keydown\", (e) => {\n    //   if (e.key === \"Shift\") {\n    //     this.setState((prevState) => ({\n    //       onShift: !prevState.onShift,\n    //     }));\n    //     console.log(\"in onshift\", this.state.onShift);\n    //   }\n    // });\n  }\n\n  onKeyDown(e) {\n    console.log(e.key);\n\n    switch (e.key) {\n      case \"Escape\":\n        this.setState({\n          onKey: \"~\"\n        });\n        break;\n\n      case \"CapsLock\":\n        this.setState({\n          onKey: \"Caps\"\n        });\n        break;\n\n      case \"Meta\":\n        this.setState({\n          onKey: \"⊞\"\n        });\n        break;\n\n      case \"ArrowUp\":\n        this.setState({\n          onKey: \"⇧\"\n        });\n        break;\n\n      case \"ArrowLeft\":\n        this.setState({\n          onKey: \"⇦\"\n        });\n        break;\n\n      case \"ArrowRight\":\n        this.setState({\n          onKey: \"⇨\"\n        });\n        break;\n\n      case \"ArrowDown\":\n        this.setState({\n          onKey: \"⇩\"\n        });\n        break;\n\n      default:\n        this.setState({\n          onKey: e.key\n        });\n    }\n  }\n\n  addClickEvent() {\n    console.log(\"abc add click\");\n    const typing__input = document.querySelector(\"#typing__input\");\n    typing__input.value += this.innerText;\n    console.log(\"ghk\", this.innerText);\n  }\n\n  onKeyUp() {\n    this.setState({\n      onKey: \"\"\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onKeyDown);\n    window.addEventListener(\"keyup\", this.onKeyUp);\n    this.addClickEvent();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    console.log(\"rerender in render keyborad\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"keyboard\",\n        className: \"keyboard\",\n        \"data-skinstance\": \"simpleKeyboard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard__rows\",\n          children: keyboard && keyboard.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"keyboard__row\",\n            children: item.map((keys, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addClickEvent,\n              className: this.state.onKey === keys.txt || this.state.onKey === keys.shiftTxt ? `keyboard__key active ` + ` keyboard__key${keys.u}` : \"keyboard__key\" + ` keyboard__key${keys.u}`,\n              children: this.state.onShift || this.state.onKey === \"Shift\" ? keys.shiftTxt : keys.txt\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KeyBoard;","map":{"version":3,"names":["click","React","Component","keyboard","KeyBoard","constructor","props","state","onShift","onKey","onKeyDown","bind","onKeyUp","e","console","log","key","setState","addClickEvent","typing__input","document","querySelector","value","innerText","componentDidMount","window","addEventListener","componentDidUpdate","render","map","item","index","keys","txt","shiftTxt","u"],"sources":["C:/typing_trainer/src/component/KeyBoard.jsx"],"sourcesContent":["import { click } from \"@testing-library/user-event/dist/click\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { keyboard } from \"../constant\";\r\n\r\nclass KeyBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onShift: false,\r\n      onKey: \"\",\r\n    };\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.onShift = this.onShift.bind(this);\r\n  }\r\n  onShift(e) {\r\n    // console.log(\"on shift func\");\r\n    // window.addEventListener(\"keydown\", (e) => {\r\n    //   if (e.key === \"Shift\") {\r\n    //     this.setState((prevState) => ({\r\n    //       onShift: !prevState.onShift,\r\n    //     }));\r\n    //     console.log(\"in onshift\", this.state.onShift);\r\n    //   }\r\n    // });\r\n  }\r\n  onKeyDown(e) {\r\n    console.log(e.key);\r\n    switch (e.key) {\r\n      case \"Escape\":\r\n        this.setState({\r\n          onKey: \"~\",\r\n        });\r\n        break;\r\n      case \"CapsLock\":\r\n        this.setState({\r\n          onKey: \"Caps\",\r\n        });\r\n        break;\r\n      case \"Meta\":\r\n        this.setState({\r\n          onKey: \"⊞\",\r\n        });\r\n        break;\r\n      case \"ArrowUp\":\r\n        this.setState({\r\n          onKey: \"⇧\",\r\n        });\r\n        break;\r\n      case \"ArrowLeft\":\r\n        this.setState({\r\n          onKey: \"⇦\",\r\n        });\r\n        break;\r\n      case \"ArrowRight\":\r\n        this.setState({\r\n          onKey: \"⇨\",\r\n        });\r\n        break;\r\n      case \"ArrowDown\":\r\n        this.setState({\r\n          onKey: \"⇩\",\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          onKey: e.key,\r\n        });\r\n    }\r\n  }\r\n\r\n  addClickEvent() {\r\n    console.log(\"abc add click\");\r\n    const typing__input = document.querySelector(\"#typing__input\");\r\n    typing__input.value += this.innerText;\r\n    console.log(\"ghk\", this.innerText);\r\n  }\r\n  onKeyUp() {\r\n    this.setState({\r\n      onKey: \"\",\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onKeyDown);\r\n    window.addEventListener(\"keyup\", this.onKeyUp);\r\n    this.addClickEvent();\r\n  }\r\n  componentDidUpdate() {}\r\n  render() {\r\n    console.log(\"rerender in render keyborad\");\r\n    return (\r\n      <div className=\"keyboard__wrapper\">\r\n        <div\r\n          id=\"keyboard\"\r\n          className=\"keyboard\"\r\n          data-skinstance=\"simpleKeyboard\"\r\n        >\r\n          <div className=\"keyboard__rows\">\r\n            {keyboard &&\r\n              keyboard.map((item, index) => (\r\n                <div key={index} className=\"keyboard__row\">\r\n                  {item.map((keys, index) => (\r\n                    <button\r\n                      onClick={this.addClickEvent}\r\n                      key={index}\r\n                      className={\r\n                        this.state.onKey === keys.txt ||\r\n                        this.state.onKey === keys.shiftTxt\r\n                          ? `keyboard__key active ` + ` keyboard__key${keys.u}`\r\n                          : \"keyboard__key\" + ` keyboard__key${keys.u}`\r\n                      }\r\n                    >\r\n                      {this.state.onShift || this.state.onKey === \"Shift\"\r\n                        ? keys.shiftTxt\r\n                        : keys.txt}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}