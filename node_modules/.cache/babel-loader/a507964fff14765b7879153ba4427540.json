{"ast":null,"code":"var _jsxFileName = \"C:\\\\typing_trainer\\\\src\\\\component\\\\Keyboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keyboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUP = () => {\n      let count = 0;\n      let arrayQuote = document.querySelectorAll(\"span\");\n      const quote_input = document.getElementById(\"quote_input\");\n      arrayQuote[count].classList.add(\"text_active\");\n      quote_input.addEventListener(\"keyup\", function (e) {\n        if (quote_input.value) {\n          if (e.key == \" \") {\n            let arrayValue = quote_input.value.toString().trim();\n\n            if (arrayValue == arrayQuote[count].innerText) {\n              arrayQuote[count].classList.add(\"correct\");\n            } else {\n              arrayQuote[count].classList.add(\"incorrect\");\n            }\n\n            arrayQuote[count].classList.remove(\"text_active\");\n            count++;\n            quote_input.value = \"\";\n            arrayQuote[count].classList.add(\"text_active\");\n          }\n        }\n      });\n    };\n\n    this.state = {\n      quote: \"Tao khong noi vì vĩ ví vỉ tao lam ban tay khong con \"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"render\");\n    this.setUP();\n  }\n\n  render() {\n    let arrayQuote = this.state.quote.split(\" \");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote_render\",\n        children: arrayQuote && arrayQuote.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quote_input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Keyboard;","map":{"version":3,"names":["React","Component","Keyboard","constructor","props","setUP","count","arrayQuote","document","querySelectorAll","quote_input","getElementById","classList","add","addEventListener","e","value","key","arrayValue","toString","trim","innerText","remove","state","quote","componentDidMount","console","log","render","split","map","item","index"],"sources":["C:/typing_trainer/src/component/Keyboard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nclass Keyboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quote: \"Tao khong noi vì vĩ ví vỉ tao lam ban tay khong con \",\r\n    };\r\n  }\r\n  setUP = () => {\r\n    let count = 0;\r\n    let arrayQuote = document.querySelectorAll(\"span\");\r\n    const quote_input = document.getElementById(\"quote_input\");\r\n    arrayQuote[count].classList.add(\"text_active\");\r\n    quote_input.addEventListener(\"keyup\", function (e) {\r\n      if (quote_input.value) {\r\n        if (e.key == \" \") {\r\n          let arrayValue = quote_input.value.toString().trim();\r\n          if (arrayValue == arrayQuote[count].innerText) {\r\n            arrayQuote[count].classList.add(\"correct\");\r\n          } else {\r\n            arrayQuote[count].classList.add(\"incorrect\");\r\n          }\r\n          arrayQuote[count].classList.remove(\"text_active\");\r\n          count++;\r\n          quote_input.value = \"\";\r\n          arrayQuote[count].classList.add(\"text_active\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"render\");\r\n    this.setUP();\r\n  }\r\n  render() {\r\n    let arrayQuote = this.state.quote.split(\" \");\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div id=\"quote_render\">\r\n          {arrayQuote &&\r\n            arrayQuote.map((item, index) => <span key={index}>{item}</span>)}\r\n        </div>\r\n        <input id=\"quote_input\" type=\"text\" />\r\n        <div className=\"key\">A</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;EAC/BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAMnBC,KANmB,GAMX,MAAM;MACZ,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAIC,UAAU,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,MAA1B,CAAjB;MACA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAApB;MACAJ,UAAU,CAACD,KAAD,CAAV,CAAkBM,SAAlB,CAA4BC,GAA5B,CAAgC,aAAhC;MACAH,WAAW,CAACI,gBAAZ,CAA6B,OAA7B,EAAsC,UAAUC,CAAV,EAAa;QACjD,IAAIL,WAAW,CAACM,KAAhB,EAAuB;UACrB,IAAID,CAAC,CAACE,GAAF,IAAS,GAAb,EAAkB;YAChB,IAAIC,UAAU,GAAGR,WAAW,CAACM,KAAZ,CAAkBG,QAAlB,GAA6BC,IAA7B,EAAjB;;YACA,IAAIF,UAAU,IAAIX,UAAU,CAACD,KAAD,CAAV,CAAkBe,SAApC,EAA+C;cAC7Cd,UAAU,CAACD,KAAD,CAAV,CAAkBM,SAAlB,CAA4BC,GAA5B,CAAgC,SAAhC;YACD,CAFD,MAEO;cACLN,UAAU,CAACD,KAAD,CAAV,CAAkBM,SAAlB,CAA4BC,GAA5B,CAAgC,WAAhC;YACD;;YACDN,UAAU,CAACD,KAAD,CAAV,CAAkBM,SAAlB,CAA4BU,MAA5B,CAAmC,aAAnC;YACAhB,KAAK;YACLI,WAAW,CAACM,KAAZ,GAAoB,EAApB;YACAT,UAAU,CAACD,KAAD,CAAV,CAAkBM,SAAlB,CAA4BC,GAA5B,CAAgC,aAAhC;UACD;QACF;MACF,CAfD;IAgBD,CA3BkB;;IAEjB,KAAKU,KAAL,GAAa;MACXC,KAAK,EAAE;IADI,CAAb;EAGD;;EAuBDC,iBAAiB,GAAG;IAClBC,OAAO,CAACC,GAAR,CAAY,QAAZ;IACA,KAAKtB,KAAL;EACD;;EACDuB,MAAM,GAAG;IACP,IAAIrB,UAAU,GAAG,KAAKgB,KAAL,CAAWC,KAAX,CAAiBK,KAAjB,CAAuB,GAAvB,CAAjB;IACA,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,EAAE,EAAC,cAAR;QAAA,UACGtB,UAAU,IACTA,UAAU,CAACuB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBAAiB;UAAA,UAAmBD;QAAnB,GAAWC,KAAX;UAAA;UAAA;UAAA;QAAA,QAAhC;MAFJ;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAO,EAAE,EAAC,aAAV;QAAwB,IAAI,EAAC;MAA7B;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAK,SAAS,EAAC,KAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AA7C8B;;AAgDjC,eAAe9B,QAAf"},"metadata":{},"sourceType":"module"}